<!DOCTYPE HTML>
<html>
		<head>
				<title>CssQuery</title>
				<link rel="shortcut icon" href="image/flower_care.png" />
				<link rel="stylesheet" type="text/css" href="lib/css/index.css" />
				<link href="lib/css/font-awesome.min.css" rel="stylesheet">
				<script src="lib/js/jquery-3.3.1.min.js"></script>
				<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.6/dist/jquery.fancybox.min.css" />
				<script src="https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.6/dist/jquery.fancybox.min.js"></script>
				<link class="dplayer-css" rel="stylesheet" href="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.css">
				<script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>
				<script src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script>
<style>
        .container,*{
                z-index: 4
        }
        canvas{
                position: absolute;
                left:0;
                top:10%;
                z-index: 1;
        }
</style>
		</head>
		<body>
				<div class='container'>
						<header>
							<nav class="logo"><img src="image/flower_care.png"></nav>
							<nav>
								<span>指南</span>
								<span><a href="#about">关于</a></span>
								<span>支持</span>
							</nav>
						</header>
						<canvas></canvas>
						<section>
							<article>来看看CSSQuery有哪些创新的地方</article>
							<p>CSSQuery基于微信云开发开发，使用微信云开发提供的数据库和存储服务，查询速度快，数据来源可靠，微信作为宿主环境，小程序可以在各个支持微信小程序的终端运行</p>
							<section class="card">
								<section left="1"><h3>用户至上</h3>提供查询服务，具体可查询的内容取决于我们的数据库，只要我们的数据库足够丰富，可查询的内容就很多
									添加评论功能，根据用户评论反馈优化程序
									支持多种编程语言代码高亮
									可根据用户使用评星动态优先搜索热点数据
									页面整洁，ui美观统一
									可拓展性强👍，代码可重用性高
									体积小，使用NoSQL数据库，查询效率高
									模糊查询，减少输入，尽量让用户做选择，而不是完整输入</section>
								<section center="1"><h3>不断改善用户体验</h3>LeanCloud 使用LeanCloud提供的免费服务应用来存储用户评论，页面访问次数，LeanCloud提供的接口对Count(存放页面访问次数)表的数据进行获取，再通过自己的服务器对热门搜索🔍进行定时整理，整理完毕后自动更新微信云开发的数据库中的HotSearch表，从而达到热门搜索推荐的效果</section>
								<section right="1">
									<h3>数据源安全可靠</h3>使用java爬取特定网页，同时将爬取的数据实例化一个JavaBean对象，内容爬取完毕后，序列化到硬盘，再导入到我们的云开发数据库可以尝试爬取Sun的java包的api文档，html5的语法文档等等。
								</section>
							</section>
							<section class="display">
									<section class="display-content">
										我们使用java爬虫再开源的网站爬取数据，通过序列化JavaBeans对象得到json文件，然后导入到微信云开发提供的数据库中。开发成本低，查询效率高
									</section>
							</section>
							<div class="gap"></div>
							<article class="use">使用截图</article>
							<table>
								<tr>
									<td>
										<a href="image/first.jpg" data-fancybox data-caption="Caption for single image">
											<img src="image/first.jpg" />
										</a>
									</td>
									<td>
										<a href="image/second.jpg" data-fancybox data-caption="Caption for single image">
											<img src="image/second.jpg" />
										</a>
									</td>
									<td>
										<a href="image/third.jpg" data-fancybox data-caption="Caption for single image">
											<img src="image/third.jpg" />
										</a>
									</td>
									<td>
										<a href="image/fourth.jpg" data-fancybox data-caption="Caption for single image">
											<img src="image/fourth.jpg" />
										</a>
									</td>
								</tr>	
							</table>
						</section>

						<div id="dplayer"></div>					
				</div>
				<footer>
					<div class="gap"></div>
					<div class="footer"
						<span>Zip的小窝提供技术服务</span>
						<nav class="hr"></nav>
						<section class="main">
							<div id="about"><p>关于CSSQuery</p>ourfor和ourEmpire以及Zhoubo是一群在校生，对JavaScript和CSS很感兴趣，刚好学院里面开展IT节，这几个人就在GitHub上面合作开发了这个小程序，这个小程序主要是通过访问数据库来动态生成网页内容</div>
							<div id="contact">
								<p>取得联系</p>
								<ul class="fa-ul">
										<li><i class="fa-li fa fa-qq"></i>QQ: 2320813747</li>
										<li><i class="fa-li fa fa-github"></i><a class="underline" href="https://github.com/ourfor/CssQuery">GitHub开源地址</a></li>
										<li><i class="fa-li fa fa-telegram"></i>Telegram讨论组</li>
										<li><i class="fa-li fa fa-wechat"></i>WeChat交流群</li>
										<li><i class="fa-li fa fa-youtube"></i>YouTube频道</li>
								</ul>
								<ul class="fa-ul">
										<li><i class="fa-li fa fa-arrow-circle-right"></i><a class="underline" href="https://blog.ourfor.top">Zip的小窝</a></li>
										<li><i class="fa-li fa fa-arrow-circle-right"></i><a class="underline" href="https://ourempire.github.io">ourEmpire的博客</a></li>
								</ul>
								
							</div>
							<div id="otherlink">
								<p>立即体验</p>
								<img src="image/css.png" />				
							</div>
						</section>
					</div>
				</footer>
		</body>
		<script>
			const dp = new DPlayer({
				container: document.getElementById('dplayer'),
				screenshot: true,
				video: {
					url: 'https://file.ourfor.top/source/CssData.mp4',
					//pic: 'https://file.ourfor.top/source/kakegurui/kv_pc.jpg',
					//thumbnails: 'https://file.ourfor.top/source/kakegurui/kv_pc.jpg'
					pic: './image/third.jpg',
					thumbnails: './image/third.jpg'
				}
			});
		</script>
		<script>
			document.addEventListener('touchmove', function (e) {
    e.preventDefault()
})
var c = document.getElementsByTagName('canvas')[0],
    x = c.getContext('2d'),
    pr = window.devicePixelRatio || 1,
    w = window.innerWidth,
    h = window.innerHeight,
    f = 90,
    q,
    m = Math,
    r = 0,
    u = m.PI*2,
    v = m.cos,
    z = m.random
    
    c.width = w*pr
    c.height = h*pr
    x.scale(pr, pr)
    x.globalAlpha = 0.6
function i(){
    x.clearRect(0,0,w,h)
    q=[{x:0,y:h*.7+f},{x:0,y:h*.7-f}]
    while(q[1].x<w+f) d(q[0], q[1])
}
function d(i,j){ 
    x.beginPath()
    x.moveTo(i.x, i.y)
    x.lineTo(j.x, j.y)
    var k = j.x + (z()*2-0.25)*f,
    n = y(j.y)
    x.lineTo(k, n)
    x.closePath()
    r-=u/-50
    x.fillStyle = '#'+(v(r)*127+128<<16 | v(r+u/3)*127+128<<8 | v(r+u/3*2)*127+128).toString(16)
    x.fill()
    q[0] = q[1]
    q[1] = {x:k,y:n}
}
function y(p){
    var t = p + (z()*2-1.1)*f
    return (t>h||t<0) ? y(p) : t
}
document.onclick = i
document.ontouchstart = i
i()
		</script>
</html>
